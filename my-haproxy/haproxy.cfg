global
    daemon
    user  haproxy
    group haproxy
#    chroot /var/lib/haproxy
#    log /dev/log    local0
#    log /dev/log    local1 info
    stats socket /var/run/haproxy.stat mode 777
    lua-load /usr/bin/acme-webroot.lua
    maxconn 120000

    tune.ssl.default-dh-param 2048
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

defaults
    mode tcp 
    timeout connect 2s
    timeout client 4s
    timeout server 4s
    timeout queue   30s
    timeout http-request 5s
    timeout http-keep-alive 30s

    option dontlog-normal
    option dontlognull
    option abortonclose

frontend http-in
    bind *:80
    redirect scheme https code 301 if !{ ssl_fc }

frontend https-in
    bind *:443 ssl crt /etc/letsencrypt/live/aws.islief.com/combined.pem alpn h2,http/1.1,http/1.0
    acl url_acme_http01 path_beg /.well-known/acme-challenge/
    http-request use-service lua.acme-http01 if METH_GET url_acme_http01
    http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"
    http-response set-header X-Content-Type-Options "nosniff"
    http-response set-header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; object-src 'none'; img-src 'self'; media-src 'none'; frame-src 'self'; font-src 'self'; connect-src 'self'"
    use_backend http2 if { ssl_fc_alpn -i h2 }
    default_backend helloworlds 

backend helloworlds
    balance roundrobin
    option httpchk HEAD / HTTP/1.0
    server golang 172.17.0.2:8001 check inter 500 rise 1 fall 1 maxconn 40000 
    server nodejs 172.17.0.4:8002 check inter 500 rise 1 fall 1 maxconn 40000 
    server java 172.17.0.5:8003 check inter 500 rise 1 fall 1 maxconn 40000 
    option redispatch

backend http2
    mode tcp
    http-request add-header X-Forwarded-Proto https
    server nginx 172.17.0.6:8000 check inter 500 rise 1 fall 1 maxconn 40000
    server nodejs 172.17.0.4:8002 check inter 500 rise 1 fall 1 maxconn 40000
    server jetty 172.17.0.5:8003 check inter 500 rise 1 fall 1 maxconn 40009000
